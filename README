ORIGINAL REPO: https://bitbucket.org/seshadhri/escape

README for Escape
----------------------------------

Instructions:

1) Run "make" in main directory.
2) Go to wrappers/ directory. Run command:
    python3 subgraph_counts.py <PATH TO INPUT> <DESIRED PATTERN SIZE> <OPTIONAL FLAGS>

   DESIRED PATTERN SIZE: Either 3, 4, or 5
   OPTIONAL FLAGS:
           -i: output counts as integers. Useful for small graphs, or for debugging
(For example, python3 subgraph_counts.py ../graphs/ca-AstroPh.edges 4 -i)

  
Input file must be in escape format, where first line has number 
of nodes and edges, and every line has a distinct undirected edge.

The console output gives the various numbers of patterns.
Each line has a different count in the format: pattern name, number of non-induced counts, number of induced counts, ratio of induced to non-induced

-----------------------------------
Here are instructions to convert a raw list of edges (with potential repeats) to the escape format.

1) Go to directory python/
2) Run "python sanitize.py <DIR NAME> <EDGE FILE NAME>
       (eg python sanitize.py ../graphs ca-AstroPh.txt)

This will create a .edges file in the directory. Such a file will be in escape format.
Always call ./test_four on such a file.

-----------------------------------

Graphs:

The graphs/ directory has a bunch of raw input files from SNAP (which are lists of edges). There
is also a small test graph called small-test.txt. Remember to sanitize these by calling "sanitize.py"
to convert into the escape format.

-----------------------------------

escape/ :

This directory has the main graph manipulation and pattern counting codes.

-----------------------------------

exe/ :

This directory has the main escape executables.

-----------------------------------

wrappers/ :

This directory has python wrapper functions through which the main code is called.

-----------------------------------

tests/ :

This directory has various test scripts, used for debugging and timing.

